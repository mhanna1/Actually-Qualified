vi app/controllers/users_controller.rb
vi app/views/users/show.html.erb 
vi app/helpers/users_helper.rb
vi app/views/users/show.html.erb 
vi app/assets/stylesheets/custom.css.scss
bundle exec rake test
bundle exec rake db:migrate:reset
cat app/controllers/users_controller.rb
vi app/views/users/new.html.erb
vi app/assets/stylesheets/custom.css.scss
bundle exec rake test
vi app/views/users/new.html.erb
vi app/controllers/users_controller.rb
bundle exec rake test
bundle exec rake test:models
bundle exec rake test:controllers
def create
# Not the final implementation!
else
render 'new'
end
bundle exec rake test:controllers
cat -n app/views/users/new.html.erb
cat -n test/controllers/users_controller_test.rb
vi app/views/users/new.html.erb 
vi app/controllers/application_controller.rb 
vi app/controllers/users_controller.rb 
bundle exec rake test:controllers
bundle exec rake test:integration
bundle exec rake test:models
vi config/routes.rb 
bundle exec rake test
bundle exec rake test
cat app/models/user.rb
cat config/routes.rb 
ls
vi config/routes.rb 
vi app/controllers/users_controller.rb 
exit
pwd
rails server
rails server
rails server
rails server
rails server --environment development
rails server
rails server
rails server
rails server
pwd
pwd
cd ./Ruby_Tests/workspace/sample_app/
vi app/controllers/users_controller.rb
vim app/controllers/users_controller.rb
pwd
cd Ruby_Tests/workspace/sample_app/
vim app/controllers/users_controller.rb
pwd
rails server
vim app/controllers/users_controller.rb
pwd
vi app/views/users/new.html.erb
cd Ruby_Tests/workspace/sample_app/
pwd
cd Ruby_Tests/workspace/sample_app/
pwd
pwd
cd Ruby_Tests/workspace/sample_app/
exit
pwd
pwd
cd Ruby_Tests/workspace/sample_app/
exit
exit
pwd
cd ~
pwd
cd Ruby_Tests/workspace/sample_app/
server rails
rails server
rails server
rails server
rails server
ls
vi app/views/users/new.html.erb
mkdir app/views/shared
vim app/views/shared/_error_messages.html.erb
vi app/assets/stylesheets/custom.css.scss
pwd
ls
cat app/helpers/*
rails generate integration_test users_signup
rails console
bundle exec rake test
vi test/integration/users_signup_test.rb 
bundle exec rake test
vi app/controllers/users_controller.rb 
vi app/controllers/users_controller.rb 
vi app/views/layouts/
history | grep migrate
bundle exec rake db:migrate:reset
bundle exec rake test
vi test/integration/users_signup_test.rb
bundle exec rake test
cat app/views/users/show.html.erb 
$ git add -A
git add -A
git commit -m "Finish user signup"
git checkout master
git merge sign-up
vu config/environments/production.rb
vi config/environments/production.rb
vi Gemfile
bundle install
vi config/puma.rb
vi ./Procfile
bundle exec rake test
git add -A
git commit -m "Use SSL and the Puma webserver in production"
git push
git push heroku
heroku run rake db:migrate
find . -type f -exec grep -n "Hartl" {} \; -print 2>/dev/null
vi ./app/views/layouts/_footer.html.erb
git add -A
git commit -m "(2) Use SSL and the Puma webserver in production"
git push
git push heroku
heroku run rake db:migrate
git checkout master
git checkout -b log-in-log-out
rails generate controller Sessions new
vi config/routes.rb
bundle exec rake routes
vi app/views/sessions/new.html.erb
vi app/controllers/sessions_controller.rb
vi app/controllers/sessions_controller.rb
bundle exec rake test
rails generate integration_test users_login
vi test/integration/users_login_test.rb
bundle exec rake test TEST=test/integration/users_login_test.rb
vi test/integration/users_login_test.rb
vi app/controllers/sessions_controller.rb
bundle exec rake test TEST=test/integration/users_login_test.rb
bundle exec rake test 
vi app/controllers/application_controller.rb 
vi app/helpers/sessions_helper.rb
vi app/controllers/sessions_controller.rb
vi app/helpers/sessions_helper.rb
vi app/helpers/sessions_helper.rb
vi app/views/layouts/_header.html.erb
vi app/assets/javascripts/application.js
vi app/models/user.rb
vi test/fixtures/users.yml
vi test/integration/users_login_test.rb
TESTOPTS="--name test_login_with_valid_information"
TESTOPTS="--name test_login_with_valid_information"
vi app/controllers/users_controller.rb
vi test/test_helper.rb
bundle exec rake test 
vi test/integration/users_signup_test.rb
bundle exec rake test 
vi app/helpers/sessions_helper.rb
vi app/controllers/sessions_controller.rb
vi test/integration/users_login_test.rb
bundle exec rake test 
rails generate migration add_remember_digest_to_users remember_digest:string
bundle exec rake db:migrate
vi app/models/user.rb
vi app/models/user.rb
find . -type f -exec grep -n "remember_digest" {} \; -print 2>/dev/null
vi app/models/user.rb
cat app/models/user.rb
vi app/controllers/sessions_controller.rb
vi app/helpers/sessions_helper.rb
vi app/helpers/sessions_helper.rb
bundle exec rake test 
cat app/models/user.rb
vi app/models/user.rb
vi app/helpers/sessions_helper.rb
bundle exec rake test 
vi test/integration/users_login_test.rb
bundle exec rake test 
vi test/models/user_test.rb 
bundle exec rake test 
vi app/models/user.rb
bundle exec rake test 
bundle exec rake test 
vi app/controllers/sessions_controller.rb
vi app/controllers/sessions_controller.rb
bundle exec rake test 
vi test/models/user_test.rb 
vi app/models/user.rb 
bundle exec rake test 
bundle exec rake test 
vi app/controllers/sessions_controller.rb
vi app/helpers/sessions_helper.rb 
bundle exec rake test 
set | grep vim
set | grep vi
vi app/views/sessions/new.html.erb
vi app/assets/stylesheets/custom.css.scss
vi app/controllers/sessions_controller.rb
bundle exec rake test 
vi test/test_helper.rb
bundle exec rake test 
vi test/integration/users_login_test.rb
bundle exec rake test 
vi app/controllers/sessions_controller.rb
bundle exec rake test 
vi app/controllers/sessions_controller.rb
vi app/helpers/sessions_helper.rb 
bundle exec rake test 
touch test/helpers/sessions_helper_test.rb
test/helpers/sessions_helper_test.rb
bundle exec rake test TEST=test/helpers/sessions_helper_test.rb
vi app/helpers/sessions_helper.rb 
bundle exec rake test TEST=test/helpers/sessions_helper_test.rb
bundle exec rake test
git add -A
git commit -m "Finish log in/log out"
$ git checkout master
git checkout master
git merge log-in-log-out
bundle exec rake test
git push
git push heroku
heroku run rake db:migrate
history
vi /Users/mark/tempfile
mv /Users/mark/tempfile cmd_history_0427
git checkout master
git checkout -b updating-users
vi app/controllers/users_controller.rb
vi app/controllers/users_controller.rb
vi config/routes.rb 
pwd
git status
git add cmd_history_0427 
git status
vi app/controllers/users_controller.rb
vi app/views/users/edit.html.erb
vi app/views/layouts/_header.html.erb
vi app/controllers/users_controller.rb
def update
@user = User.find(params[:id])
if @user.update_attributes(user_params)
# Handle a successful update.
else
render 'edit'
end
end
rails generate integration_test users_edit
vi test/integration/users_edit_test.rb
cat test/integration/users_signup_test.rb 
def setup
@user = users(:michael)
end
test "unsuccessful edit" do
get edit_user_path(@user)
assert_template 'users/edit'
"",
email: "foo@invalid",
"foo",
password_confirmation: "bar" }
assert_template 'users/edit'
bundle exec rake test
vi test/integration/users_edit_test.rb
bundle exec rake test
vi app/controllers/users_controller.rb
bundle exec rake test
vi test/integration/users_edit_test.rb
vi test/integration/users_edit_test.rb
vi app/models/user.rb
bundle exec rake test
vi app/controllers/users_controller.rb
bundle exec rake test
vi app/controllers/users_controller.rb
bundle exec rake test
vi +10 test/integration/users_edit_test.rb
vi +10 test/helpers/sessions_helper_test.rb 
history | grep find
find . -type f -exec grep -n "log_in_as" {} \; -print 2>/dev/null
vi test/test_helper.rb
bundle exec rake test
vi test/controllers/users_controller_test.rb
bundle exec rake test
vi app/controllers/users_controller.rb
bundle exec rake test
vi app/controllers/users_controller.rb
vi app/controllers/users_controller.rb
man vim
vim ~/.viminfo
vi ~/.viminfo
vi ~/.vimrc
vi app/controllers/users_controller.rb
bundle exec rake test
vi test/fixtures/users.yml
vi test/controllers/users_controller_test.rb
test/controllers/
ls -lsat app/controllers/
vi app/controllers/users_controller.rb
find . -type f -exec grep -n "current_user" {} \; -print 2>/dev/null
cat ./test/helpers/sessions_helper_test.rb
vi app/controllers/users_controller.rb
vi app/controllers/users_controller.rb
find . -type f -exec grep -n "current_user" {} \; -print 2>/dev/null
bundle exec rake test
vi test/controllers/users_controller_test.rb
vi test/controllers/users_controller_test.rb
vi test/fixtures/users.yml
vi app/controllers/users_controller.rb
bundle exec rake test
vi test/test_helper.rb
bundle exec rake test
vi test/test_helper.rb
vi app/controllers/users_controller.rb
bundle exec rake test
vi app/controllers/users_controller.rb
find . -type f -exec grep -n "def current_user" {} \; -print 2>/dev/null
vi app/helpers/sessions_helper.rb
vi app/controllers/users_controller.rb
vi test/controllers/users_controller_test.rb 
bundle exec rake test
vi test/controllers/users_controller_test.rb 
vi test/controllers/users_controller_test.rb 
bundle exec rake test
vi test/controllers/users_controller_test.rb 
vi test/controllers/users_controller_test.rb 
bundle exec rake test
vi test/test_helper.rb:27
vi -l27 test/test_helper.rb
vi -l 27 test/test_helper.rb
man vi
man vi
vi +27 test/test_helper.rb
vi +36 est/controllers/users_controller_test.rb
vi +36 test/controllers/users_controller_test.rb
bundle exec rake test
vi app/helpers/sessions_helper.rb
bundle exec rake test
vi app/controllers/users_controller.rb
vi app/controllers/users_controller.rb
bundle exec rake test
vi test/integration/users_edit_test.rb
bundle exec rake test
vi test/integration/users_edit_test.rb
bundle exec rake test
vi app/helpers/sessions_helper.rb
bundle exec rake test
vi app/controllers/users_controller.rb
vi app/controllers/sessions_controller.rb 
bundle exec rake test
git status
git add -A
git status
git commit -m "Mid chapter 9.3"
git checkout master
git list
git --help
git branch list
git list branch
git status
history | grep branch
history | grep merge
history | grep -- "-b"
git log
git log --oneline --decorate
git status
history | grep merge
history | grep git
git status
history | grep git | grep merge
git merge updating-users
push
git push
git push heroku
git log --oneline --decorate
history | grep git | grep -- "-b"
git status
git checkout master
git checkout -b "Showing Users"
git branch "Showing Users"
man git
man git-branch
git branch Showing_Users
git status
git checkout Showing_Users
history | grep git
vi test/controllers/users_controller_test.rb 
vi app/controllers/users_controller.rb 
bundle exec rake test
vi app/views/users/index.html.erb
vi app/views/users/index.html.erb
bundle exec rake test
vi app/views/layouts/_header.html.erb 
bundle exec rake test
vi app/assets/stylesheets/custom.css.scss 
bundle exec rake test
vi config/routes.rb 
vi app/views/users/index.html.erb
vi app/controllers/users_controller.rb 
vi app/views/users/index.html.erb
history | grep find
find . -type f -exec grep -n "users_path" {} \; -print 2>/dev/null
find . -type f -exec grep -n "help_path" {} \; -print 2>/dev/null
vi app/helpers/users_helper.rb
vi app/views/users/index.html.erb
vi app/helpers/users_helper.rb
find . -type f -exec grep -n "gravatar" {} \; -print 2>/dev/null
vi ./app/helpers/users_helper.rb
vi ./app/helpers/users_helper.rb
find . -type f -exec grep -n "gravatar" {} \; -print 2>/dev/null
vi ./app/views/users/index.html.erb
vi app/views/users/index.html.erb
bundle exec rake test
git status
git add -A
git commit Showing_Users
history | grep git
git commit -m "Showing Users"
git push
git push heroku
git checkout master
git merge Showing_Users
get branch faker_added
git branch faker_added
git checkout -b faker_added
git status
git push
git status
git checkout -b faker_add
vi Gemfile
bundle install
vi db/seeds.rb 
vi db/seeds.rb 
bundle exec rake db:migrate:reset
bundle exec rake db:seed
vi Gemfile
bundle install
vi app/views/users/index.html.erb 
vi app/controllers/users_controller.rb 
bundle install
history | tail -50
history | tail -50 | grep bun
git status
bundle exec rake test
vi test/fixtures/users.yml 
rails generate integration_test users_index
vi test/integration/users_index_test.rb 
bundle exec rake test
vi app/views/users/index.html.erb
vi app/views/users/_user.html.erb
vi app/views/users/_user.html.erb
vi app/views/users/index.html.erb
bundle exec rake test
rails generate migration add_admin_to_users admin:boolean
vi db/migrate/20150430033742_add_admin_to_users.rb 
bundle exec rake db:migrate
rails console --sandbox
vi db/seeds.rb 
bundle exec rake db:migrate:reset
bundle exec rake db:seed
vi app/views/users/_user.html.erb
vi app/controllers/users_controller.rb
vi app/controllers/users_controller.rb
bundle exec rake test
vi test/fixtures/users.yml
vi test/controllers/users_controller_test.rb
bundle exec rake test
vi test/integration/users_index_test.rb
bundle exec rake test
history | grep git
git status
git add -A
git status
git commit -m "Finish with faker and delete users"
git checkout master
git merge faker_add
it push
git push
bundle exec rake test
git pushheroku
git push heroku
heroku pg:reset DATABASE
heroku run rake db:migrate
heroku run rake db:seed
heroku restart
history
ls -lsat
ls -lsatr
cat cmd_history_0427
man history 
export HISTCONTROL=ignoredups
history
//
//
//
//'
//' > cmd_history_0428
