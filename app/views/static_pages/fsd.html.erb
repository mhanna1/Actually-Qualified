<% provide(:title, 'Employer Introduction Site - Full Stack Developer') %>

<div class="jumbotron" style="background:#5C81AB !important">

  <h1>Full-Stack Developer</h1>

    <p align="justify">It is always tough to apply self-reflection and ask who am I? So I did some research
      into current job titles and the qualifications associated with each. I came across the
      description of the full stack developer.</p>


    <p align="justify">Am I a “full-stack developer”? Varying definitions of this title exist: from a developer
      specialized in everything from front-end to back-end; to a developer who has a general
      knowledge in all steps from concept to finished product; to a fictional figure with a
      virtually unattainable skill set.</p>

    <p align="justify">To me, a Full Stack Developer is someone with familiarity in each layer, if not
      mastery in some and a genuine interest in all software technology.</p>
    <p align="justify"><strong>Good developers who are familiar with the entire stack know how to make
      life easier for those around them. </strong>
    <ol>
      <li><strong>Server, Network, and Hosting Environment.</strong>
        <ol>
          <li>All software should either increase revenues and/or lower costs.</li>
          <li>This involves understanding what can break and why, taking no resource for granted.</li>
          <li>Appropriate use of the file system, cloud storage, network resources, and an
            understanding of data redundancy and availability is necessary.</li>
          <li>How does the application scale given the hardware constraints?</li>
          <li>What about multi-threading and race conditions? Guess what, you won't see those on
            your development machine, but they can and do happen in the real world.</li>
          <li>Full stack developers can work side by side with DevOps.
            The system should provide useful error messages and logging capabilities.
            DevOps will see the messages before you will, so make them count.</li>
        </ol>
      </li>
      <li><strong>Data Modeling</strong>
        <ol>
          <li>All software should either increase revenues and/or lower costs.</li>
          <li>If the data model is flawed, the business logic and higher layers will suffer.</li>
          <li>Full stack developers know how to create a reasonably normalized relational model,
            complete with foreign keys, indexes, views, lookup tables, etc.</li>
          <li>Full stack developers are familiar with the concept of non-relational data stores
            and understand where they shine over relational data stores.</li>
        </ol>
      </li>
      <li><strong>Business Logic</strong>
        <ol>
          <li>All software should either increase revenues and/or lower costs.</li>
          <li>The heart of the value the application provides.</li>
          <li>Solid object oriented skills are needed here.</li>
          <li>Frameworks might be needed here as well.</li>
        </ol>
      </li>
      <li><strong>API layer / Action Layer / MVC</strong>
        <ol>
          <li>All software should either increase revenues and/or lower costs.</li>
          <li>How the outside world operates against the business logic and data model.</li>
          <li>Frameworks at this level should be used heavily.</li>
          <li>Full stack developers have the ability to write clear, consistent,
            simple to use interfaces.</li>
        </ol>
      </li>
      <li><strong>User Interface</strong>
        <ol>
          <li>All software should either increase revenues and/or lower costs.</li>
          <li>Full stack developers: a) understand how to create a readable layout, or
            b) acknowledge they need help from artists and graphic designers. Graphics is a
            weakness of mine. I had an orange and black painted bathroom once.
            Either way, implementing a good visual design is key.</li>
          <li>Can include mastery of HTML5 / CSS.</li>
          <li>JavaScript and AJAX adds style. Lots of exciting work is being done in
            the JavaScript world.</li>
        </ol>
      </li>
      <li><strong>User Experience</strong>
        <ol>
          <li>All software should either increase revenues and/or lower costs.</li>
          <li>Full stack developers appreciate that users just want things to work.</li>
          <li>A good system doesn't give its users carpal tunnel syndrome or sore eyes.
            A full stack developer can step back and look at a process that needs 8 clicks
            and 3 steps, and get it down to one or two clicks.</li>
          <li>Full stack developers write useful error messages. If something breaks,
            be apologetic about it. Sometimes programmers inadvertently write error
            messages that can make people feel stupid.</li>
        </ol>
      </li>
      <li><strong>Understanding what the customer and the business need.</strong>
        <ol>
          <li>Now we are blurring into the line of architect,
            but that is too much of a hands off role.</li>
          <li>Full stack developers have a grasp of what is going on in the field when
            the customer uses the software. They also have a grasp of the business.</li>
          <li>All software should either increase revenues and/or lower costs.</li>
        </ol>
      </li>
    </ol>
    <p align="justify">&nbsp;</p>
    <p align="justify"><strong>Other Pieces of the Puzzle:</strong></p>
    <ol>
      <li>Ability to write quality unit tests. By the way, even JavaScript can have unit tests these days.</li>
      <li>Understanding of repeatable automated processes for building the application, testing it,
        documenting it, and deploying it at scale.</li>
      <li>An awareness of security concerns is important, as each layer
        presents its own possible vulnerabilities.</li>
    </ol>
    <p align="justify">&nbsp;</p>
    <p align="justify"><strong>Closing Thoughts:</strong></p>
    <p align="justify">If you read this closely you noticed that I repeated ... </p>
     <ul><li>All software should either increase revenues and/or lower costs.</li></ul>

    <p align="justify">I did so because I think that it is lost on too many in our field, that every action taken should be
      in an effort to add value by either providing people, processes and/or product
      which will either increase revenues and/or lower costs for the company or client.
      All other actions are waste.</p>

    <p align="justify">Technology start-ups need full stack developers for their versatility!
      However, as an organization matures a full stack developers can be instrumental in getting
      the specialists all rowing in synchronized harmony.</p>
    <p align="justify">I'm not sure you can call yourself a full stack developer until you have worked
      in multiple languages, platforms, and even industries in your professional career.
      Full stack goes beyond a "senior engineer" as it is along the same lines as a
      polyglot programmer but with a higher view of all the connecting pieces.
      Note that on the above list, only items 3, 4, and 5 actually involve writing code.</p>

    <p align="justify">Clearly, it takes years of work experience in different languages, roles, and
      industries to reach this level of qualification. Because of this, full stack developers
      are few and far between, making those who exist very employable and in-demand.


    </p>
    <p align="justify">In deep self-reflection I can honestly say that according to the above definitions
      I could indeed actually be a qualified full stack developer.
    <p align="justify">&nbsp;</p>
    <p align="justify">&nbsp;</p>
</div>